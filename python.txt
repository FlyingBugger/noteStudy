//数据结构

堆栈作为特定的数据结构，最先进入的元素最后一个被释放（后进先出）
用 append() 方法可以把一个元素添加到堆栈顶。用不指定索引的 pop() 方法可以把一个元素从堆栈顶释放出来。

urls=(
 '/(.*)',"hello"，
'/index','index'，
'/blog/\d+','index'                    第一项是指访问的地址 从上向下匹配，第二个参数是指转到指定的 class处理
)
class index:
	def GET(self ,name)          第二个参数是get数据

return "index methods"


//numpy 分析


print ("list2[1:5]: ", list2[1:5]) //访问数组中一段数据
python 列表 []				列表可以被修改
	元祖 ()
	字典 {} k:v  dict={'first':'value'}		dict['first']        del删除相应的值

循环 js中 for(let i=0;i<arr.length();i++）

python	for i in range(0,10,3):第三个参数为步长
		print(i)

比方说对一个序列求和，就可以用reduce实现：

>>> def f(x):
...     return x * x
...

>>> from functools import reduce
>>> def fn(x, y):
...     return x * 10 + y
...
>>> reduce(fn, [1, 3, 5, 7, 9])
13579


>>> r = map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> list(r)
[1, 4, 9, 16, 25, 36, 49, 64, 81]

>>> from functools import reduce
>>> def add(x, y):
...     return x + y
...
>>> reduce(add, [1, 3, 5, 7, 9])
25
>>> range(5)
[0, 1, 2, 3, 4]
https://www.liaoxuefeng.com/